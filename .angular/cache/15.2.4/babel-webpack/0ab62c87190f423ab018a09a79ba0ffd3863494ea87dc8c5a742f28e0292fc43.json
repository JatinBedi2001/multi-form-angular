{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction Form3Component_ng_container_6_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const state_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", state_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(state_r4);\n  }\n}\nfunction Form3Component_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Form3Component_ng_container_6_option_1_Template, 2, 2, \"option\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.states);\n  }\n}\nfunction Form3Component_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1, \"-- No states available --\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class Form3Component {\n  constructor() {\n    this.selectedCity = '';\n    this.selectedState = '';\n    this.selectedCountry = '';\n    this.cities = [];\n  }\n  ngOnChanges() {\n    this.cities = this.getCitiesForState(this.selectedState);\n  }\n  // constructor(private authService: AuthService) {}\n  // ngOnChanges() {\n  //   if (this.authService.isAdmin()) {\n  //     this.cities = this.getCitiesForState(this.selectedState);\n  //   }\n  // }\n  getCitiesForState(state) {\n    switch (state) {\n      case 'California':\n        return ['Los Angeles', 'San Francisco'];\n      case 'New York':\n        return ['New York City', 'Rochester'];\n      case 'Ontario':\n        return ['Toronto', 'Ottawa'];\n      case 'Alberta':\n        return ['Calgary', 'Edmonton'];\n      default:\n        return [];\n    }\n  }\n  onSubmit() {\n    console.log('Selected Country:', this.selectedCountry);\n    console.log('Selected State:', this.selectedState);\n    console.log('Selected City:', this.selectedCity);\n  }\n}\nForm3Component.ɵfac = function Form3Component_Factory(t) {\n  return new (t || Form3Component)();\n};\nForm3Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Form3Component,\n  selectors: [[\"app-form3\"]],\n  inputs: {\n    selectedState: \"selectedState\",\n    selectedCountry: \"selectedCountry\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 9,\n  vars: 3,\n  consts: [[\"for\", \"city\"], [\"name\", \"state\", \"id\", \"state\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [\"noStates\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"disabled\", \"\", \"selected\", \"\"]],\n  template: function Form3Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"label\", 0);\n      i0.ɵɵtext(2, \"Select State:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"select\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function Form3Component_Template_select_ngModelChange_3_listener($event) {\n        return ctx.selectedState = $event;\n      })(\"change\", function Form3Component_Template_select_change_3_listener($event) {\n        return ctx.stateChanged.emit($event);\n      });\n      i0.ɵɵelementStart(4, \"option\", 2);\n      i0.ɵɵtext(5, \"-- Select State --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, Form3Component_ng_container_6_Template, 2, 1, \"ng-container\", 3);\n      i0.ɵɵtemplate(7, Form3Component_ng_template_7_Template, 2, 0, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(8);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedState);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.states.length > 0)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAcQA,iCAAqD;IAAAA,YAAW;IAAAA,iBAAS;;;;IAApCA,gCAAe;IAACA,eAAW;IAAXA,8BAAW;;;;;IADlEA,6BAAuD;IACrDA,oFAAyE;IAC3EA,0BAAe;;;;IADaA,eAAS;IAATA,uCAAS;;;;;IAGnCA,iCAA0B;IAAAA,yCAAyB;IAAAA,iBAAS;;;ACVpE,OAAM,MAAOC,cAAc;EAJ3BC;IAKE,iBAAY,GAAG,EAAE;IACR,kBAAa,GAAG,EAAE;IAClB,oBAAe,GAAG,EAAE;IAC7B,WAAM,GAAa,EAAE;;EAGrBC,WAAW;IACT,IAAI,CAACC,MAAM,GAAG,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAACC,aAAa,CAAC;EAC1D;EAEA;EAEA;EACA;EACA;EACA;EACA;EAGAD,iBAAiB,CAACE,KAAa;IAC7B,QAAQA,KAAK;MACX,KAAK,YAAY;QACf,OAAO,CAAC,aAAa,EAAE,eAAe,CAAC;MACzC,KAAK,UAAU;QACb,OAAO,CAAC,eAAe,EAAE,WAAW,CAAC;MACvC,KAAK,SAAS;QACZ,OAAO,CAAC,SAAS,EAAE,QAAQ,CAAC;MAC9B,KAAK,SAAS;QACZ,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC;MAChC;QACE,OAAO,EAAE;IAAC;EAEhB;EAEAC,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAACC,eAAe,CAAC;IACtDF,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACJ,aAAa,CAAC;IAClDG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACE,YAAY,CAAC;EAClD;;AAvCWX,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAY;EAAAC;IAAAR;IAAAK;EAAA;EAAAI;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDEzBnB,4BAAM;MACcA,6BAAa;MAAAA,iBAAQ;MACvCA,iCAAiG;MAAjEA;QAAA;MAAA,EAA2B;QAAA,OAAWoB,6BAAyB;MAAA,EAApC;MACzDpB,iCAAiB;MAAAA,kCAAkB;MAAAA,iBAAS;MAC5CA,iFAEe;MACfA,gHAEc;MAChBA,iBAAS;;;;MARuBA,eAA2B;MAA3BA,2CAA2B;MAE1CA,eAAyB;MAAzBA,4CAAyB","names":["i0","Form3Component","constructor","ngOnChanges","cities","getCitiesForState","selectedState","state","onSubmit","console","log","selectedCountry","selectedCity","selectors","inputs","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/jatinbedi/Desktop/multi-form-angular/src/app/form3/form3.component.html","/Users/jatinbedi/Desktop/multi-form-angular/src/app/form3/form3.component.ts"],"sourcesContent":["<!-- <form>\n    <label for=\"city\">Select City:</label>\n    <select name=\"city\" id=\"city\" [(ngModel)]=\"selectedCity\">\n      <option value=\"\">-- Select City --</option>\n      <option *ngFor=\"let city of cities\" [value]=\"city\">{{ city }}</option>\n    </select>\n    <button type=\"button\" (click)=\"onSubmit()\">Submit</button>\n  </form> -->\n\n  <form>\n    <label for=\"city\">Select State:</label>\n    <select name=\"state\" id=\"state\" [(ngModel)]=\"selectedState\" (change)=\"stateChanged.emit($event)\">\n      <option value=\"\">-- Select State --</option>\n      <ng-container *ngIf=\"states.length > 0; else noStates\">\n        <option *ngFor=\"let state of states\" [value]=\"state\">{{ state }}</option>\n      </ng-container>\n      <ng-template #noStates>\n        <option disabled selected>-- No states available --</option>\n      </ng-template>\n    </select>\n  </form> \n","import { Component, Input} from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-form3',\n  templateUrl: './form3.component.html',\n})\nexport class Form3Component {\n  selectedCity = '';\n  @Input() selectedState = '';\n  @Input() selectedCountry = '';\n  cities: string[] = [];\n\n  \n  ngOnChanges() {\n    this.cities = this.getCitiesForState(this.selectedState);\n  }\n\n  // constructor(private authService: AuthService) {}\n\n  // ngOnChanges() {\n  //   if (this.authService.isAdmin()) {\n  //     this.cities = this.getCitiesForState(this.selectedState);\n  //   }\n  // }\n\n\n  getCitiesForState(state: string): string[] {\n    switch (state) {\n      case 'California':\n        return ['Los Angeles', 'San Francisco'];\n      case 'New York':\n        return ['New York City', 'Rochester'];\n      case 'Ontario':\n        return ['Toronto', 'Ottawa'];\n      case 'Alberta':\n        return ['Calgary', 'Edmonton'];\n      default:\n        return [];\n    }\n  }\n\n  onSubmit() {\n    console.log('Selected Country:', this.selectedCountry);\n    console.log('Selected State:', this.selectedState);\n    console.log('Selected City:', this.selectedCity);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}