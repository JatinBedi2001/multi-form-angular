{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction Form2Component_ng_container_6_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const state_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", state_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(state_r4);\n  }\n}\nfunction Form2Component_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Form2Component_ng_container_6_option_1_Template, 2, 2, \"option\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.states);\n  }\n}\nfunction Form2Component_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1, \"-- No states available --\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class Form2Component {\n  constructor() {\n    this.selectedState = '';\n    this.selectedCountry = '';\n    this.stateChanged = new EventEmitter();\n    this.states = [];\n  }\n  ngOnChanges() {\n    this.states = this.getStatesForCountry(this.selectedCountry);\n  }\n  getStatesForCountry(country) {\n    switch (country) {\n      case 'USA':\n        return ['California', 'New York'];\n      case 'Canada':\n        return ['Ontario', 'Alberta'];\n      default:\n        return [];\n    }\n  }\n}\nForm2Component.ɵfac = function Form2Component_Factory(t) {\n  return new (t || Form2Component)();\n};\nForm2Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Form2Component,\n  selectors: [[\"app-form2\"]],\n  inputs: {\n    selectedCountry: \"selectedCountry\"\n  },\n  outputs: {\n    stateChanged: \"stateChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 10,\n  vars: 3,\n  consts: [[\"for\", \"state\"], [\"name\", \"state\", \"id\", \"state\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [\"noStates\", \"\"], [\"type\", \"button\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"disabled\", \"\", \"selected\", \"\"]],\n  template: function Form2Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"label\", 0);\n      i0.ɵɵtext(2, \"Select State:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"select\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function Form2Component_Template_select_ngModelChange_3_listener($event) {\n        return ctx.selectedState = $event;\n      })(\"change\", function Form2Component_Template_select_change_3_listener($event) {\n        return ctx.stateChanged.emit($event);\n      });\n      i0.ɵɵelementStart(4, \"option\", 2);\n      i0.ɵɵtext(5, \"-- Select State --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, Form2Component_ng_container_6_Template, 2, 1, \"ng-container\", 3);\n      i0.ɵɵtemplate(7, Form2Component_ng_template_7_Template, 2, 0, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"button\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(8);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedState);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.states.length > 0)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAAA,SAAmCA,YAAY,QAAQ,eAAe;;;;;;ICa9DC,iCAAqD;IAAAA,YAAW;IAAAA,iBAAS;;;;IAApCA,gCAAe;IAACA,eAAW;IAAXA,8BAAW;;;;;IADlEA,6BAAuD;IACrDA,oFAAyE;IAC3EA,0BAAe;;;;IADaA,eAAS;IAATA,uCAAS;;;;;IAGnCA,iCAA0B;IAAAA,yCAAyB;IAAAA,iBAAS;;;ADVpE,OAAM,MAAOC,cAAc;EAJ3BC;IAKE,kBAAa,GAAG,EAAE;IACT,oBAAe,GAAG,EAAE;IAEnB,iBAAY,GAAG,IAAIH,YAAY,EAAS;IAClD,WAAM,GAAa,EAAE;;EAErBI,WAAW;IACT,IAAI,CAACC,MAAM,GAAG,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACC,eAAe,CAAC;EAC9D;EAEAD,mBAAmB,CAACE,OAAe;IACjC,QAAQA,OAAO;MACb,KAAK,KAAK;QACR,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC;MACnC,KAAK,QAAQ;QACX,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC;MAC/B;QAEE,OAAO,EAAE;IAAC;EAEhB;;AArBWN,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAO;EAAAC;IAAAH;EAAA;EAAAI;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCEzBhB,4BAAM;MACeA,6BAAa;MAAAA,iBAAQ;MACxCA,iCAAiG;MAAjEA;QAAA;MAAA,EAA2B;QAAA,OAAWiB,6BAAyB;MAAA,EAApC;MACzDjB,iCAAiB;MAAAA,kCAAkB;MAAAA,iBAAS;MAC5CA,iFAEe;MACfA,gHAEc;MAChBA,iBAAS;MACTA,4BAAgC;MAClCA,iBAAO;;;;MAV2BA,eAA2B;MAA3BA,2CAA2B;MAE1CA,eAAyB;MAAzBA,4CAAyB","names":["EventEmitter","i0","Form2Component","constructor","ngOnChanges","states","getStatesForCountry","selectedCountry","country","selectors","inputs","outputs","stateChanged","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/jatinbedi/Desktop/multi-form-angular/src/app/form2/form2.component.ts","/Users/jatinbedi/Desktop/multi-form-angular/src/app/form2/form2.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-form2',\n  templateUrl: './form2.component.html',\n})\nexport class Form2Component {\n  selectedState = '';\n  @Input() selectedCountry = '';\n  \n  @Output() stateChanged = new EventEmitter<Event>();\n  states: string[] = [];\n\n  ngOnChanges() {\n    this.states = this.getStatesForCountry(this.selectedCountry);\n  }\n\n  getStatesForCountry(country: string): string[] {\n    switch (country) {\n      case 'USA':\n        return ['California', 'New York'];\n      case 'Canada':\n        return ['Ontario', 'Alberta'];\n      default:\n\n        return [];\n    }\n  }\n}\n","<!-- <form>\n    <label for=\"state\">Select State:</label>\n    <select name=\"state\" id=\"state\" [(ngModel)]=\"selectedState\" (change)=\"stateChanged.emit($event)\">\n      <option value=\"\">-- Select State --</option>\n      <option *ngFor=\"let state of states\" [value]=\"state\">{{ state }}</option>\n    </select>\n  </form> -->\n\n  <form>\n    <label for=\"state\">Select State:</label>\n    <select name=\"state\" id=\"state\" [(ngModel)]=\"selectedState\" (change)=\"stateChanged.emit($event)\">\n      <option value=\"\">-- Select State --</option>\n      <ng-container *ngIf=\"states.length > 0; else noStates\">\n        <option *ngFor=\"let state of states\" [value]=\"state\">{{ state }}</option>\n      </ng-container>\n      <ng-template #noStates>\n        <option disabled selected>-- No states available --</option>\n      </ng-template>\n    </select>\n    <button type=\"button\" ></button>\n  </form> \n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}